version: "3"
services:

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    ports:
      - '5050:80'
    environment:
      - PGADMIN_DEFAULT_EMAIL=jerilcj3@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=johnjose    
    depends_on:
      - db    

  db:
    container_name: db
    image: 'postgres:15'
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    tty: true      
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      start_period: 10s
      timeout: 4s
      retries: 3

  nginx:
    container_name: nginx
    depends_on:
      - api
      - client
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - '80:80'     # change this port when running in production 

  api:
    container_name: api
    restart: always    
    build:
      dockerfile: Dockerfile.dev
      context: "./server"    
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      DATABASE_URL: ${DATABASE_URL}
      BASE_URL: ${BASE_URL}
    volumes:
      - /app/node_modules
      - ./server:/app
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      disable: true
  
  migrations:
    container_name: migrations
    build:
      dockerfile: Dockerfile.dev
      context: "./server"
    command: 
      [
        "./wait-for-it.sh",
        "db:5432",
        "--",
        "npm",
        "run",
        "migrate:up"
      ]
    links:
      - db
    depends_on:
      - db    
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      DATABASE_URL: ${DATABASE_URL}
      
      
  client:
    container_name: client
    restart: always
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    build:
      dockerfile: Dockerfile.dev
      context: './client'
    volumes:
      - /app/node_modules
      - ./client:/app

volumes:
  pg_data: null
